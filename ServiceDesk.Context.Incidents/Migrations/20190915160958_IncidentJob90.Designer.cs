// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ServiceDesk.Context.Incidents;

namespace ServiceDesk.Context.Incidents.Migrations
{
    [DbContext(typeof(IncidentsContext))]
    [Migration("20190915160958_IncidentJob90")]
    partial class IncidentJob90
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ServiceDesk.Incidents.Entities.Branch", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NameBranch");

                    b.HasKey("Id");

                    b.ToTable("Brabches");
                });

            modelBuilder.Entity("ServiceDesk.Incidents.Entities.Incident", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("BranchId");

                    b.Property<string>("ContactEmail");

                    b.Property<string>("ContactPhone");

                    b.Property<int>("Count");

                    b.Property<DateTime>("CreateDate");

                    b.Property<int>("ShareType");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.ToTable("Incidents");
                });

            modelBuilder.Entity("ServiceDesk.Incidents.Entities.Job", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("IncidentId");

                    b.Property<string>("JobTitle");

                    b.HasKey("Id");

                    b.HasIndex("IncidentId");

                    b.ToTable("Job");
                });

            modelBuilder.Entity("ServiceDesk.Incidents.Entities.Manager", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.HasKey("Id");

                    b.ToTable("Managers");
                });

            modelBuilder.Entity("ServiceDesk.Incidents.Entities.Priority", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("PriorityType");

                    b.HasKey("Id");

                    b.ToTable("Priorities");
                });

            modelBuilder.Entity("ServiceDesk.Incidents.Entities.Incident", b =>
                {
                    b.HasOne("ServiceDesk.Incidents.Entities.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId");
                });

            modelBuilder.Entity("ServiceDesk.Incidents.Entities.Job", b =>
                {
                    b.HasOne("ServiceDesk.Incidents.Entities.Incident", "Incident")
                        .WithMany("Incidents")
                        .HasForeignKey("IncidentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
